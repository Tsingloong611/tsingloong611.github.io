diff --git a/node_modules/astro-pure/plugins/toc.ts b/node_modules/astro-pure/plugins/toc.ts
index 2609983..abfb84d 100644
--- a/node_modules/astro-pure/plugins/toc.ts
+++ b/node_modules/astro-pure/plugins/toc.ts
@@ -14,28 +14,36 @@ function diveChildren(item: TocItem, depth: number): TocItem[] {
 }
 
 export function generateToc(headings: readonly MarkdownHeading[]) {
-  // this ignores/filters out h1 element(s)
   const bodyHeadings = [...headings.filter(({ depth }) => depth > 1)]
   const toc: TocItem[] = []
 
   bodyHeadings.forEach((h) => {
+    if (!h || typeof h.depth !== 'number') {
+      console.warn(`[generateToc] Invalid heading skipped:`, h)
+      return
+    }
+
     const heading: TocItem = { ...h, subheadings: [] }
 
-    // add h2 elements into the top level
     if (heading.depth === 2) {
       toc.push(heading)
     } else {
-      const lastItemInToc = toc[toc.length - 1]!
+      const lastItemInToc = toc[toc.length - 1]
+      if (!lastItemInToc) {
+        console.warn(`[generateToc] Heading '${heading.text}' of depth ${heading.depth} has no parent h2, skipping.`)
+        return
+      }
+
       if (heading.depth < lastItemInToc.depth) {
         throw new Error(`Orphan heading found: ${heading.text}.`)
       }
 
-      // higher depth
-      // push into children, or children's children
       const gap = heading.depth - lastItemInToc.depth
       const target = diveChildren(lastItemInToc, gap)
       target.push(heading)
     }
   })
+
   return toc
 }
+
